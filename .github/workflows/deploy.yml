name: Deploy to Amazon EC2

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: begin-vegan-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: begin-vegan-codedeploy-application
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: begin-vegan-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: create application.properties file
        run: |
          mkdir ./src/main/resources/database
          touch ./src/main/resources/database/application-database.yml
          echo "${{ secrets.DATABASE_YML }}" | base64 --decode > src/main/resources/database/application-database.yml
          
          mkdir ./src/main/resources/oauth2
          touch ./src/main/resources/oauth2/application-oauth2.yml
          echo "${{ secrets.OAUTH2_YML }}" | base64 --decode > src/main/resources/oauth2/application-oauth2.yml
          
          mkdir ./src/main/resources/s3
          touch ./src/main/resources/s3/application-s3.yml
          echo "${{ secrets.S3_YML }}" | base64 --decode > src/main/resources/s3/application-s3.yml
          
          mkdir ./src/main/resources/firebase
          touch ./src/main/resources/firebase/application-firebase.yml
          echo "${{ secrets.FIREBASE_YML }}" | base64 --decode > src/main/resources/firebase/application-firebase.yml
          
          touch ./src/main/resources/firebase/services-account.json
          echo "${{ secrets.SERVICES_ACCOUNT_JSON }}" | base64 --decode > src/main/resources/firebase/services-account.json

      # 추가
      - name: Make Gradle Wrapper script executable
        run: chmod +x /home/runner/work/BeginVegan-Server/BeginVegan-Server/gradlew

      # Gradle build
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: clean build -x test

        # AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 빌드 결과물 버킷 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip